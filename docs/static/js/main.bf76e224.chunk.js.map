{"version":3,"sources":["api/puzzle/countContinents.ts","api/puzzle/Puzzle.ts","api/puzzle/index.ts","components/puzzle/PuzzleComponent.tsx","pages/days/day1.tsx","pages/days/day2.tsx","pages/days/day3.tsx","pages/days/index.tsx","pages/homepage/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["countContinents","state","sequence","enabled","map","v","k","forEach","index","n","i","colour","queue","length","splice","x","push","flood","readFallback","value","fallback","undefined","Puzzle","details","colCounts","rowCounts","totalActive","numContinents","this","Array","fill","complete","some","Error","JSON","stringify","reduce","a","b","every","count","filter","_","subIndex","slice","j","status","newState","isValid","image","path","process","CHECKED_IMAGES","UNCHECKED_IMAGES","concat","Image","src","randomImage","checked","Math","floor","random","Button","props","onToggle","useState","img","setImage","setEnabled","useEffect","onClick","useCallback","event","type","isRightClick","preventDefault","onContextMenu","style","border","backgroundImage","backgroundColor","backgroundSize","padding","ButtonContainer","display","gridTemplateColumns","repeat","gridTemplateRows","children","clueStyle","alignItems","justifyContent","textAlign","EdgeClue","horizontal","text","toString","alt","Clue","width","coreStyle","transform","height","fontSize","fontWeight","WebkitTextStroke","columnStyles","gridArea","DetailsColumn","puzzle","EdgeWrapper","gridTemplateAreas","c","alignContent","PuzzleComponent","PuzzleWrapper","getState","setState","newStatus","toggle","PUZZLE_0","PUZZLE_1","PUZZLE_2","PUZZLE_3","PUZZLE_4","PUZZLE_HARD","PUZZLE_0A","PUZZLE_HARD_1","PUZZLE_HARD_2","dayData","title","description","link","component","Container","Typography","variant","HomePage","day","to","Card","CardContent","NavItem","textDecoration","color","marginLeft","App","AppBar","position","Toolbar","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAoCeA,MAfR,SAAyBC,GAC9B,IAAMC,EAAWD,EAAME,QAAQC,KAAI,SAAAC,GAAC,OAAKA,KACrCC,EAAI,EAUR,OARAJ,EAASK,SAAQ,SAACF,EAAGG,GACT,IAANH,KAxBR,SAAeH,EAAoBO,EAAWC,EAAWC,GAGvD,IAFA,IAAMC,EAAQ,CAACF,GAERE,EAAMC,QAAQ,CACnB,MAAYD,EAAME,OAAO,EAAG,GAArBT,EAAP,oBACA,GAAIH,EAASG,KAAOM,GAA0B,IAAhBT,EAASG,GAAvC,CAIAH,EAASG,GAAKM,EAEd,IAAMI,EAAIV,EAAII,EACVM,EAAI,GAAGH,EAAMI,KAAKX,EAAI,GACtBU,EAAIN,EAAE,GAAGG,EAAMI,KAAKX,EAAI,GACxBA,GAAKI,GAAGG,EAAMI,KAAKX,EAAII,GACvBJ,EAAII,EAAIA,EAAIA,GAAGG,EAAMI,KAAKX,EAAII,KAWhCQ,CAAMf,EAAUD,EAAMQ,EAAGD,EAAOF,EAAI,GACpCA,GAAK,MAIFA,GC9BT,SAASY,EAAaC,GAA2C,IAAhBC,EAAe,wDAAH,EAC3D,YAAcC,IAAVF,EACKC,EAGFD,E,ICNMG,E,WDmBb,WAAYC,GAAyB,yBAT5Bd,OAS2B,OAPpCR,WAOoC,OAL3BuB,eAK2B,OAJ3BC,eAI2B,OAH3BC,iBAG2B,OAF3BC,mBAE2B,EAClC,IAAMlB,EAAIc,EAAQd,EAYlB,GAVAmB,KAAKnB,EAAIA,EAETmB,KAAK3B,MAAQ,CACXE,QAAS0B,MAAMpB,EAAIA,GAAGqB,MAAK,GAC3BC,UAAU,EACVtB,KAGFmB,KAAKJ,UAAYD,EAAQC,WAAaK,MAAMpB,GAAGqB,MAAM,GACrDF,KAAKH,UAAYF,EAAQE,WAAaI,MAAMpB,GAAGqB,MAAM,GACjDF,KAAKJ,UAAUQ,MAAK,SAAA3B,GAAC,OAAIA,GAAK,GAAKA,EAAII,KACzC,MAAM,IAAIwB,MAAM,sCAAwCC,KAAKC,UAAUP,KAAKJ,YAE9E,GAAII,KAAKH,UAAUO,MAAK,SAAA3B,GAAC,OAAIA,GAAK,GAAKA,EAAII,KACzC,MAAM,IAAIwB,MAAM,sCAAwCC,KAAKC,UAAUP,KAAKH,YAG9EG,KAAKF,YAAcR,EAAaK,EAAQG,aACxCE,KAAKD,cAAgBT,EAAaK,EAAQI,e,2CAG5C,SAAQ1B,GAA8B,IAAD,OACnC,GAAI2B,KAAKF,aAAe,GACJzB,EAAME,QAAQiC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,IAAKC,IAAG,KAEvCV,KAAKF,YACrB,OAAO,EAaX,IATkBE,KAAKJ,UAAUe,OAAM,SAACC,EAAOhC,GAC7C,OAAe,IAAXgC,GAEcvC,EAAME,QAAQsC,QAAO,SAACC,EAAGC,GAAJ,OAAiBA,EAAW,EAAKlC,IAAMD,KACxD4B,QAAO,SAACC,EAAGC,GAAJ,OAAUD,IAAKC,IAAG,KAEhCE,KAIf,OAAO,EAYT,IATkBZ,KAAKH,UAAUc,OAAM,SAACC,EAAOhC,GAC7C,OAAe,IAAXgC,GAEcvC,EAAME,QAAQyC,MAAMpC,EAAQ,EAAKC,GAAID,EAAQ,GAAK,EAAKC,GACnD2B,QAAO,SAACC,EAAGC,GAAJ,OAAUD,IAAMC,IAAI,KAElCE,KAIf,OAAO,EAGT,IAA4B,IAAxBZ,KAAKD,eACY3B,EAAgBC,KAEhB2B,KAAKD,cACtB,OAAO,EAIX,OAAO,I,sBAGT,WACE,OAAOC,KAAK3B,Q,kBAGd,SAAKS,EAAWmC,GACd,IAAMrC,EAAQE,EAAImC,EAAIjB,KAAKnB,EAE3B,OAAOmB,KAAK3B,MAAME,QAAQK,K,oBAG5B,SAAOE,EAAWmC,EAAWC,GAC3B,IAAMtC,EAAQE,EAAImC,EAAIjB,KAAKnB,EACrBsC,EAAW,CACf5C,QAASyB,KAAK3B,MAAME,QAAQyC,QAC5Bb,UAAU,EACVtB,EAAGmB,KAAKnB,GAOV,OALAsC,EAAS5C,QAAQK,GAASsC,EAC1BC,EAAShB,SAAWH,KAAKoB,QAAQD,GAEjCnB,KAAK3B,MAAQ8C,EAENnB,KAAK3B,U,YErGhB,SAASgD,EAAMC,GACb,MAAM,GAAN,OAAUC,eAAV,YAAoCD,GAGtC,I,EAAME,EAAiB,CACrB,gBACA,gBACA,iBACAhD,IAAI6C,GAEAI,EAAmB,CACvB,kBACA,kBACA,mBACAjD,IAAI6C,G,cAEcG,EAAeE,OAAOD,I,IAA1C,2BAA6D,CAAC,IAAnDJ,EAAkD,SAC3C,IAAIM,OACZC,IAAMP,G,gCAGhB,IAAMQ,EAAc,SAACC,GACnB,OAAIA,EACKN,EAAeO,KAAKC,MAAMD,KAAKE,SAAWT,EAAevC,SAG3DwC,EAAiBM,KAAKC,MAAMD,KAAKE,SAAWR,EAAiBxC,UAoBtE,IAAMiD,EAAS,SAACC,GACd,IAAQjB,EAAqBiB,EAArBjB,OAAQkB,EAAaD,EAAbC,SAChB,EAAwBC,mBAASR,EAAYX,IAA7C,mBAAOoB,EAAP,KAAYC,EAAZ,KACA,EAA8BF,oBAAS,GAAvC,mBAAO9D,EAAP,KAAgBiE,EAAhB,KAEAC,qBAAU,WACRF,EAASV,EAAYX,MACpB,CAACA,IAEJ,IAAMwB,EAAUC,uBAAY,SAACC,IA1B/B,SAAsBA,GACpB,GAAI,SAAUA,EAAO,CACnB,GAAmB,UAAfA,EAAMC,KACR,OAAO,EACF,GAAmB,gBAAfD,EAAMC,KACf,OAAO,EAGX,MAAI,UAAWD,EACa,IAAnBA,EAAK,MACH,WAAYA,GACM,IAApBA,EAAK,OAgBRE,CAAaF,GAWX1B,GACFqB,EAASV,GAAY,IACrBO,GAAS,GACTI,GAAW,KAEXD,EAASV,GAAY,IACrBO,GAAS,GACTI,GAAW,KAhBbI,EAAMG,iBACNR,EAASV,GAAY,IACjBX,IAAW3C,GACb6D,GAAS,GACTI,GAAW,IAEXA,GAAW,MAad,CAACjE,EAAS6D,EAAUlB,IAEvB,OACE,wBACEwB,QAASA,EACTM,cAAeN,EACfO,MAAO,CACLC,OAAQ,kBACRC,gBAAiB5E,EAAO,cAAU+D,EAAV,KAAmB,GAC3Cc,gBAAiB,QACjBC,eAAgB,QAChBC,QAAS,QAkBXC,EAAkB,SAACpB,GACvB,OACE,qBAAKc,OAdepE,EAcOsD,EAAMtD,EAdiB,CACpD2E,QAAS,cACTC,oBAAqB,SAASC,OAAO7E,GACrC8E,iBAAkB,SAASD,OAAO7E,GAClCqE,OAAQ,oBAUN,SACGf,EAAMyB,WAfU,IAAC/E,GA2BlBgF,EAA2B,CAC/BL,QAAS,OACTM,WAAY,SACZC,eAAgB,SAChBC,UAAW,UAGPC,EAAW,SAAC9B,GAChB,IAAQvB,EAAsBuB,EAAtBvB,MAAOsD,EAAe/B,EAAf+B,WAEf,OAAItD,EAAQ,EAER,cAAC,EAAD,CAAMuD,KAAMvD,EAAMwD,WAAYF,WAAYA,IAEnCtD,GAAS,EAEhB,cAAC,EAAD,CACEyD,IAAG,UAAKzD,EAAL,oBAAsBsD,EAAa,MAAQ,UAC9C7C,MAAOA,EAAM,cAAD,OAAeT,EAAf,SACZsD,WAAYA,IAKX,yBAWHI,EAAO,SAACnC,GACZ,IACEkC,EAKElC,EALFkC,IACAF,EAIEhC,EAJFgC,KACA9C,EAGEc,EAHFd,MACA6C,EAEE/B,EAFF+B,WAJF,EAMI/B,EADFoC,aALF,MAKU,OALV,EAQMC,EAA2B,CAC/BC,UAAWP,EAAa,qBAAkBzE,EAC1C8E,QACAG,OAAQH,EACR1D,OAAQ,oCAGV,OAAIQ,GAAS8C,EAET,qBAAKlB,MAAK,uCACLuB,GACAX,GAFK,IAGRV,gBAAgB,OAAD,OAAS9B,EAAT,KACfgC,eAAgB,QAChBsB,SAAU,MACVC,WAAY,IACZC,iBAAkB,cAPpB,SASGV,IAML,sBAAKlB,MAAOY,EAAZ,UACGxC,GACC,qBACEgD,IAAKA,EACLpB,MAAOuB,EACP5C,IAAKP,IAGR8C,GAAQA,MAKTW,EAA8B,CAClCP,MAAO,QACPG,OAAQ,OACRK,SAAU,gBACVvB,QAAS,OACTM,WAAY,eACZC,eAAgB,UAGZiB,EAAgB,SAAC7C,GACrB,IAAQ8C,EAAW9C,EAAX8C,OAIR,OAF6C,IAA1BA,EAAOlF,cAOxB,qBAAKkD,MAAO6B,EAAZ,UAC6B,IAA1BG,EAAOlF,eACN,cAAC,EAAD,CACEsB,MAAOA,EAAM,wBACbgD,IAAI,uBACJF,KAAMc,EAAOlF,cAAcqE,WAC3BG,MAAM,WAVL,MAiBLW,EAAc,SAAC/C,GACnB,IAzHiBtD,EAyHT+E,EAAqBzB,EAArByB,SAAUqB,EAAW9C,EAAX8C,OAKlB,OAHqBA,EAAOrF,UAAUQ,MAAK,SAAA3B,GAAC,OAAIA,GAAK,MAChDwG,EAAOpF,UAAUO,MAAK,SAAA3B,GAAC,OAAIA,GAAK,OAEQ,IAAxBwG,EAAOnF,YAK1B,sBAAKmD,OAnIUpE,EAmIOoG,EAAOpG,EAnIgB,CAC/C2E,QAAS,cACTG,iBAAiB,QAAD,OAAc,IAAJ9E,EAAU,EAApB,MAChB4E,oBAAoB,QAAD,OAAc,IAAJ5E,EAAU,EAApB,WACnBsG,kBAAmB,kFA+HjB,UACE,cAAC,EAAD,CAAeF,OAAQA,IACvB,qBAAKhC,MAAO,CACV8B,SAAU,YACVvB,QAAS,OACTC,oBAAqB,SAASC,OAAOuB,EAAOpG,GAC5CkF,eAAgB,gBAJlB,SAMGkB,EAAOrF,UAAUpB,KAAI,SAAC4G,EAAGxG,GAAJ,OACpB,cAAC,EAAD,CAAsBgC,MAAOwE,GAAdxG,QAGnB,qBAAKqE,MAAO,CACV8B,SAAU,gBADZ,SAGGnB,IAEH,qBAAKX,MAAO,CACV8B,SAAU,aACVvB,QAAS,OACTG,iBAAkB,SAASD,OAAOuB,EAAOpG,GACzCwG,aAAc,gBAJhB,SAMGJ,EAAOpF,UAAUrB,KAAI,SAAC4G,EAAGxG,GAAJ,OACpB,cAAC,EAAD,CAAsBgC,MAAOwE,EAAGlB,YAAU,GAA3BtF,SAGM,IAAxBqG,EAAOnF,aACN,qBAAKmD,MAAO,CACV8B,SAAU,cACVf,UAAW,SACXD,eAAgB,UAHlB,SAKE,wBAAQd,MAAO,CAAE0B,SAAU,OAA3B,SACGM,EAAOnF,mBAtCT8D,GAoDE0B,EAAkB,SAACnD,GAC9B,IAAQC,EAA4BD,EAA5BC,SAAU6C,EAAkB9C,EAAlB8C,OAAQ5G,EAAU8D,EAAV9D,MAE1B,OACE,cAAC,EAAD,CAAa4G,OAAQA,EAArB,SACE,cAAC,EAAD,CAAiBpG,EAAGoG,EAAOpG,EAA3B,SACGR,EAAME,QAAQC,KAAI,SAAC0C,EAAQtC,GAC1B,IAAME,EAAIF,EAAQqG,EAAOpG,EACvBoC,EAAIc,KAAKC,MAAMpD,EAAQqG,EAAOpG,GAEhC,OACE,cAAC,EAAD,CAEEqC,OAAQA,EACRkB,SAAUA,EAAStD,EAAGmC,GACtBnC,EAAGF,EAAQqG,EAAOpG,EAClBoC,EAAGc,KAAKC,MAAMpD,EAAQqG,EAAOpG,IAJxBD,WAiBN2G,EAAgB,SAACpD,GAC5B,IAAQxC,EAAYwC,EAAZxC,QAER,EAAiB0C,mBAAS,IAAI3C,EAAOC,IAA9BsF,EAAP,oBAEA,EAA0B5C,mBAAsB4C,EAAOO,YAAvD,mBAAOnH,EAAP,KAAcoH,EAAd,KAEMrD,EAAWO,uBAAY,SAAC7D,EAAWmC,GAAZ,OAA0B,SAACyE,GACtDD,EAASR,EAAOU,OAAO7G,EAAGmC,EAAGyE,OAC5B,CAACT,IAEJ,OACE,qBAAKhC,MAAO,CACVG,gBAAiB/E,EAAM8B,SAAW,2BAA6B,GAC/DmD,QAAS,OAFX,SAIE,cAAC,EAAD,CACE2B,OAAQA,EACR7C,SAAUA,EACV/D,MAAOA,OC5VTuH,EAAW,CAAE/G,EAAG,EAAGe,UAAW,CAAC,EAAE,EAAE,GAAIC,UAAW,CAAC,EAAE,EAAE,IACvDgG,EAAW,CAAEhH,EAAG,EAAGe,UAAW,CAAC,EAAE,EAAE,GAAIC,UAAW,CAAC,EAAE,EAAE,IACvDiG,EAAW,CAAEjH,EAAG,EAAGe,UAAW,CAAC,EAAE,EAAE,EAAE,GAAIC,UAAW,CAAC,EAAE,EAAE,EAAE,IAC3DkG,EAAW,CAAElH,EAAG,EAAGe,UAAW,CAAC,EAAE,EAAE,EAAE,EAAE,GAAIC,UAAW,CAAC,EAAE,EAAE,EAAE,EAAE,IAC/DmG,EAAW,CAAEnH,EAAG,EAAGe,UAAW,CAAC,EAAE,EAAE,EAAE,EAAE,GAAIC,UAAW,CAAC,EAAE,EAAE,EAAE,EAAE,IAC/DoG,EAAc,CAAEpH,EAAG,EAAGe,UAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,UAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,ICLtE+F,EAAW,CAAE/G,EAAG,EAAGe,UAAW,CAAC,EAAE,EAAE,GAAIC,UAAW,CAAC,GAAG,GAAG,IACzDqG,EAAY,CAAErH,EAAG,EAAGe,UAAW,CAAC,EAAE,GAAG,GAAIC,UAAW,EAAE,EAAE,GAAG,GAAIC,YAAa,GAC5E+F,EAAW,CAAEhH,EAAG,EAAGe,UAAW,CAAC,EAAE,GAAG,GAAIC,UAAW,CAAC,GAAG,EAAE,IACzDiG,EAAW,CAAEjH,EAAG,EAAGe,UAAW,CAAC,EAAE,GAAG,GAAIC,UAAW,CAAC,GAAG,EAAE,GAAIC,YAAa,GAC1EiG,EAAW,CAAElH,EAAG,EAAGe,UAAW,CAAC,EAAE,GAAG,EAAE,GAAIC,UAAW,EAAE,GAAG,EAAE,EAAE,GAAIC,YAAa,IAC/EkG,EAAW,CAAEnH,EAAG,EAAGe,UAAW,CAAC,EAAE,GAAG,EAAE,GAAIC,UAAW,CAAC,GAAG,EAAE,EAAE,GAAIC,YAAa,IAC9EqG,EAAgB,CAAEtH,EAAG,EAAGe,UAAW,CAAC,GAAG,GAAG,EAAE,EAAE,GAAIC,UAAW,EAAE,EAAE,EAAE,GAAG,EAAE,GAAIC,YAAa,GACzFsG,GAAgB,CAAEvH,EAAG,EAAGe,UAAW,CAAC,GAAG,GAAG,EAAE,EAAE,GAAIC,UAAW,EAAE,EAAE,EAAE,GAAG,EAAE,GAAIC,YAAa,ICPzF8F,GAAW,CAAE/G,EAAG,EAAGe,UAAW,CAAC,GAAG,EAAE,GAAIC,UAAW,EAAE,GAAG,GAAG,GAAIC,YAAa,EAAGC,cAAe,GAC9FmG,GAAY,CAAErH,EAAG,EAAGe,UAAW,EAAE,GAAG,GAAG,GAAIC,UAAW,EAAE,GAAG,GAAG,GAAIC,YAAa,EAAGC,cAAe,GACjG8F,GAAW,CAAEhH,EAAG,EAAGe,UAAW,CAAC,EAAE,EAAE,GAAIC,UAAW,CAAC,EAAE,EAAE,GAAIE,cAAe,GAC1E+F,GAAW,CAAEjH,EAAG,EAAGe,UAAW,EAAE,EAAE,EAAE,GAAIC,UAAW,EAAE,EAAE,EAAE,GAAIE,cAAe,GAC5EgG,GAAW,CAAElH,EAAG,EAAGe,UAAW,CAAC,EAAE,EAAE,GAAG,GAAIC,UAAW,CAAC,EAAE,GAAG,GAAG,GAAIC,YAAa,GAAIC,cAAe,GAClGiG,GAAW,CAAEnH,EAAG,EAAGe,UAAW,CAAC,EAAE,GAAG,EAAE,GAAIC,UAAW,CAAC,EAAE,EAAE,GAAG,GAAIC,YAAa,EAAGC,cAAe,GAChGoG,GAAgB,CAAEtH,EAAG,EAAGe,UAAW,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,UAAW,CAAC,EAAE,EAAE,GAAG,EAAE,GAAIC,YAAa,EAAGC,cAAe,GACzGqG,GAAgB,CAAEvH,EAAG,EAAGe,UAAW,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,UAAW,CAAC,EAAE,EAAE,GAAG,EAAE,GAAIC,YAAa,EAAGC,cAAe,GCDlGsG,GAAqB,CAChC,CACEC,MAAO,uBACPC,YAAa,gBACbC,KAAM,UACNC,UHJe,WACjB,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBACA,0LAKA,oKAKA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BACA,cAAC,EAAD,CAAejH,QAASiG,IACxB,kTAMA,qJAKA,cAACe,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,cAAC,EAAD,CAAejH,QAASkG,IACxB,8BACE,2CADF,8DAKA,cAACc,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,8DACA,cAAC,EAAD,CAAejH,QAASmG,IACxB,uBAEA,cAACa,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,kEACA,cAAC,EAAD,CAAejH,QAASoG,IACxB,uBAEA,cAACY,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,cAAC,EAAD,CAAejH,QAASqG,IACxB,uBAEA,cAACW,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BACA,cAAC,EAAD,CAAejH,QAASsG,IACxB,4BG5CJ,CACEK,MAAO,wBACPC,YAAa,oCACbC,KAAM,UACNC,UFRe,WACjB,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBACA,4GAIA,2HAKA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCACA,kTAOA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BACA,cAAC,EAAD,CAAejH,QAASiG,IACxB,8BACE,2CADF,4EAIA,yDAIA,cAACe,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BACA,gGACiE,8CADjE,OAIA,cAAC,EAAD,CAAejH,QAASuG,IACxB,qFAIA,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,2DACA,cAAC,EAAD,CAAejH,QAASkG,IACxB,uBAEA,cAACc,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,6DACA,cAAC,EAAD,CAAejH,QAASmG,IACxB,2HAKA,cAACa,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,cAAC,EAAD,CAAejH,QAASoG,IACxB,uBAEA,cAACY,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,cAAC,EAAD,CAAejH,QAASqG,IACxB,uBAEA,cAACW,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BACA,cAAC,EAAD,CAAejH,QAASwG,IACxB,uBAEA,cAACQ,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BACA,0FACA,cAAC,EAAD,CAAejH,QAASyG,KACxB,4BE3DJ,CACEE,MAAO,oBACPC,YAAa,sBACbC,KAAM,UACNC,UDde,WACjB,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBACA,qEAIA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCACA,kTAOA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BACA,cAAC,EAAD,CAAejH,QAASiG,KACxB,uBAEA,cAACe,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BACA,0GAIA,cAAC,EAAD,CAAejH,QAASuG,KACxB,uBAEA,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,2DACA,cAAC,EAAD,CAAejH,QAASkG,KACxB,uBAEA,cAACc,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,cAAC,EAAD,CAAejH,QAASmG,KACxB,uBAEA,cAACa,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,cAAC,EAAD,CAAejH,QAASoG,KACxB,uBAEA,cAACY,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,cAAC,EAAD,CAAejH,QAASqG,KACxB,uBAEA,cAACW,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BACA,cAAC,EAAD,CAAejH,QAASwG,KACxB,uBAEA,cAACQ,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BACA,sEACA,cAAC,EAAD,CAAejH,QAASyG,KACxB,6BErCSS,GAtBE,WACf,OACE,eAACH,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,kCACA,gFACCP,GAAQ7H,KAAI,SAAAsI,GAAG,OACd,qCACE,cAAC,IAAD,CAAqBC,GAAID,EAAIN,KAA7B,SACE,cAACQ,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACN,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BE,EAAIR,QAC7BQ,EAAIP,aAAgB,4BAAIO,EAAIP,oBAJxBO,EAAIN,MAQf,iCCRJU,GAAU,SAAC/E,GACf,OACE,cAAC,IAAD,CAAM4E,GAAI5E,EAAM4E,GAAI9D,MAAO,CAAEkE,eAAgB,OAAQC,MAAO,QAASC,WAAY,QAAjF,SACE,cAACV,EAAA,EAAD,CAAYC,QAAQ,SAApB,SACGzE,EAAMyB,cAiCA0D,OA3Bf,WACE,OACE,eAAC,IAAD,WACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACd,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBAGA,cAAC,GAAD,CAASG,GAAG,IAAZ,kBACA,cAAC,GAAD,CAASA,GAAIV,GAAQ,GAAGG,KAAxB,mBACA,cAAC,GAAD,CAASO,GAAIV,GAAQA,GAAQpH,OAAS,GAAGuH,KAAzC,wBAGJ,eAAC,IAAD,WACGH,GAAQ7H,KAAI,SAACkJ,EAAM9I,GAAP,OACX,cAAC,IAAD,CAAmB0C,KAAMoG,EAAKlB,KAA9B,SACGkB,EAAKjB,WADI7H,MAId,cAAC,IAAD,CAAO0C,KAAK,IAAZ,SACE,cAAC,GAAD,aC9BKqG,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.bf76e224.chunk.js","sourcesContent":["import { PuzzleState } from './types';\n\nfunction flood(sequence: number[], n: number, i: number, colour: number) {\n  const queue = [i];\n\n  while (queue.length) {\n    const [v] = queue.splice(0, 1);\n    if (sequence[v] === colour || sequence[v] === 0) {\n      continue;\n    }\n\n    sequence[v] = colour;\n\n    const x = v % n;\n    if (x > 0) queue.push(v - 1);\n    if (x < n-1) queue.push(v + 1);\n    if (v >= n) queue.push(v - n);\n    if (v < n * n - n) queue.push(v + n);\n  }\n}\n\nexport function countContinents(state: PuzzleState): number {\n  const sequence = state.enabled.map(v => +v);\n  let k = 0;\n\n  sequence.forEach((v, index) => {\n    if (v === 1) {\n      // Use k+2 to avoid conflicting with 1\n      flood(sequence, state.n, index, k + 2);\n      k += 1;\n    }\n  });\n\n  return k;\n}\n\nexport default countContinents;\n","import countContinents from './countContinents';\nimport type { PuzzleDetails, PuzzleState } from './types';\n\nfunction readFallback(value: number | undefined, fallback = -1) {\n  if (value === undefined) {\n    return fallback;\n  }\n\n  return value;\n}\n\nexport default class Puzzle {\n  readonly n: number;\n\n  state: PuzzleState;\n\n  readonly colCounts: number[];\n  readonly rowCounts: number[];\n  readonly totalActive: number;\n  readonly numContinents: number;\n\n  constructor(details: PuzzleDetails) {\n    const n = details.n;\n\n    this.n = n;\n\n    this.state = {\n      enabled: Array(n * n).fill(false),\n      complete: false,\n      n,\n    };\n\n    this.colCounts = details.colCounts || Array(n).fill(-1);\n    this.rowCounts = details.rowCounts || Array(n).fill(-1);\n    if (this.colCounts.some(v => v < -1 || v > n)) {\n      throw new Error('Invalid requirement forsome column ' + JSON.stringify(this.colCounts));\n    }\n    if (this.rowCounts.some(v => v < -1 || v > n)) {\n      throw new Error('Invalid requirement forsome column ' + JSON.stringify(this.rowCounts));\n    }\n\n    this.totalActive = readFallback(details.totalActive);\n    this.numContinents = readFallback(details.numContinents);\n  }\n\n  isValid(state: PuzzleState): boolean {\n    if (this.totalActive >= 0) {\n      const numActive = state.enabled.reduce((a, b) => a + +b, 0);\n\n      if (numActive !== this.totalActive) {\n        return false;\n      }\n    }\n\n    const colsValid = this.colCounts.every((count, index) => {\n      if (count === -1) return true;\n\n      const inThisCol = state.enabled.filter((_, subIndex) => subIndex % this.n === index);\n      const sum = inThisCol.reduce((a, b) => a + +b, 0);\n\n      return sum === count;\n    });\n\n    if (!colsValid) {\n      return false;\n    }\n\n    const rowsValid = this.rowCounts.every((count, index) => {\n      if (count === -1) return true;\n\n      const inThisRow = state.enabled.slice(index * this.n, (index + 1) * this.n);\n      const sum = inThisRow.reduce((a, b) => a + (+b), 0);\n\n      return sum === count;\n    });\n\n    if (!rowsValid) {\n      return false;\n    }\n\n    if (this.numContinents !== -1) {\n      const continents = countContinents(state);\n\n      if (continents !== this.numContinents) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getState(): PuzzleState {\n    return this.state;\n  }\n\n  read(i: number, j: number): boolean {\n    const index = i + j * this.n;\n\n    return this.state.enabled[index];\n  }\n\n  toggle(i: number, j: number, status: boolean): PuzzleState {\n    const index = i + j * this.n;\n    const newState = {\n      enabled: this.state.enabled.slice(),\n      complete: false,\n      n: this.n,\n    };\n    newState.enabled[index] = status;\n    newState.complete = this.isValid(newState);\n\n    this.state = newState;\n\n    return this.state;\n  }\n}\n","import Puzzle from './Puzzle';\n\nexport default Puzzle;\n\nexport type { PuzzleDetails, PuzzleState } from './types';\n","import React, { CSSProperties, useCallback, useState, useEffect } from 'react';\n\nimport Puzzle from '../../api/puzzle';\nimport type { PuzzleDetails, PuzzleState } from '../../api/puzzle';\n\ninterface ButtonProps {\n  i: number;\n  j: number;\n  onToggle: (newStatus: boolean) => void;\n  status: boolean;\n}\n\nfunction image(path: string) {\n  return `${process.env.PUBLIC_URL}/${path}`;\n}\n\nconst CHECKED_IMAGES = [\n  'checked-1.png',\n  'checked-2.png',\n  'checked-3.png',\n].map(image);\n\nconst UNCHECKED_IMAGES = [\n  'unchecked-1.png',\n  'unchecked-2.png',\n  'unchecked-3.png',\n].map(image);\n\nfor (const image of CHECKED_IMAGES.concat(UNCHECKED_IMAGES)) {\n  const preload = new Image();\n  preload.src = image;\n}\n\nconst randomImage = (checked: boolean) => {\n  if (checked) {\n    return CHECKED_IMAGES[Math.floor(Math.random() * CHECKED_IMAGES.length)];\n  }\n\n  return UNCHECKED_IMAGES[Math.floor(Math.random() * UNCHECKED_IMAGES.length)];\n}\n\nfunction isRightClick(event: React.MouseEvent) {\n  if ('type' in event) {\n    if (event.type === 'click') {\n      return false;\n    } else if (event.type === 'contextmenu') {\n      return true;\n    }\n  }\n  if ('which' in event) {\n    return event['which'] === 3;\n  } else if ('button' in event) {\n    return event['button'] === 2;\n  }\n\n  return false;\n}\n\nconst Button = (props: ButtonProps) => {\n  const { status, onToggle } = props;\n  const [img, setImage] = useState(randomImage(status));\n  const [enabled, setEnabled] = useState(false);\n\n  useEffect(() => {\n    setImage(randomImage(status));\n  }, [status]);\n\n  const onClick = useCallback((event: React.MouseEvent) => {\n    if (isRightClick(event)) {\n      // Suppress context menu\n      event.preventDefault();\n      setImage(randomImage(false));\n      if (status || !enabled) {\n        onToggle(false);\n        setEnabled(true);\n      } else {\n        setEnabled(false);\n      }\n    } else {\n      if (status) {\n        setImage(randomImage(false));\n        onToggle(false);\n        setEnabled(false);\n      } else {\n        setImage(randomImage(true));\n        onToggle(true);\n        setEnabled(true);\n      }\n    }\n  }, [enabled, onToggle, status]);\n\n  return (\n    <button\n      onClick={onClick}\n      onContextMenu={onClick}\n      style={{\n        border: '2px solid black',\n        backgroundImage: enabled ? `url(${img})` : '',\n        backgroundColor: 'white',\n        backgroundSize: 'cover',\n        padding: '0',\n      }}\n    />\n  );\n};\n\nconst containerStyle = (n: number): CSSProperties => ({\n  display: 'inline-grid',\n  gridTemplateColumns: '100px '.repeat(n),\n  gridTemplateRows: '100px '.repeat(n),\n  border: '4px solid black',\n});\n\ninterface ButtonContainerProps {\n  n: number;\n  children: React.ReactElement[];\n}\n\nconst ButtonContainer = (props: ButtonContainerProps) => {\n  return (\n    <div style={containerStyle(props.n)}>\n      {props.children}\n    </div>\n  );\n};\n\nconst edgeStyle = (n: number): CSSProperties => ({\n  display: 'inline-grid',\n  gridTemplateRows: `45px ${n * 100 + 8}px`,\n  gridTemplateColumns: `auto ${n * 100 + 8}px 45px`,\n  gridTemplateAreas: '\"extra-details top-clues total-count\" \"extra-details main-section side-clues\"',\n});\n\nconst clueStyle: CSSProperties = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  textAlign: 'center',\n};\n\nconst EdgeClue = (props: { count: number; horizontal?: boolean }) => {\n  const { count, horizontal } = props;\n\n  if (count > 6) {\n    return (\n      <Clue text={count.toString()} horizontal={horizontal} />\n    );\n  } else if (count >= 0) {\n    return (\n      <Clue\n        alt={`${count} in this ${horizontal ? 'row' : 'column'}`}\n        image={image(`counts/dot-${count}.png`)}\n        horizontal={horizontal}\n      />\n    );\n  }\n\n  return <div></div>;\n};\n\ninterface ClueProps {\n  horizontal?: boolean;\n  image?: string;\n  alt?: string;\n  text?: string;\n  width?: string;\n}\n\nconst Clue = (props: ClueProps) => {\n  const {\n    alt,\n    text,\n    image,\n    horizontal,\n    width = '45px',\n  } = props;\n\n  const coreStyle: CSSProperties = {\n    transform: horizontal ? 'rotate(90deg)' : undefined,\n    width,\n    height: width,\n    filter: 'grayscale(100%) brightness(100%)',\n  };\n\n  if (image && text) {\n    return (\n      <div style={{\n        ...coreStyle,\n        ...clueStyle,\n        backgroundImage: `url(${image})`,\n        backgroundSize: 'cover',\n        fontSize: '2em',\n        fontWeight: 900,\n        WebkitTextStroke: '2px white',\n      }}>\n        {text}\n      </div>\n    );\n  }\n\n  return (\n    <div style={clueStyle}>\n      {image && (\n        <img\n          alt={alt}\n          style={coreStyle}\n          src={image}\n        />\n      )}\n      {text && text}\n    </div>\n  );\n};\n\nconst columnStyles: CSSProperties = {\n  width: '100px',\n  height: '100%',\n  gridArea: 'extra-details',\n  display: 'flex',\n  alignItems: 'space-evenly',\n  justifyContent: 'center',\n};\n\nconst DetailsColumn = (props: { puzzle: Puzzle }) => {\n  const { puzzle } = props;\n\n  const anyDetails = puzzle.numContinents !== -1;\n\n  if (!anyDetails) {\n    return null;\n  }\n\n  return (\n    <div style={columnStyles}>\n      {puzzle.numContinents !== -1 && (\n        <Clue\n          image={image('counts/continent.png')}\n          alt=\"Number of continents\"\n          text={puzzle.numContinents.toString()}\n          width=\"60px\"\n        />\n      )}\n    </div>\n  )\n};\n\nconst EdgeWrapper = (props: { puzzle: Puzzle; children: React.ReactElement }) => {\n  const { children, puzzle } = props;\n\n  const anyEdgeClues = puzzle.colCounts.some(v => v >= 0)\n    || puzzle.rowCounts.some(v => v >= 0);\n  \n  if (!anyEdgeClues && puzzle.totalActive === -1) {\n    return children;\n  }\n\n  return (\n    <div style={edgeStyle(puzzle.n)}>\n      <DetailsColumn puzzle={puzzle} />\n      <div style={{\n        gridArea: 'top-clues',\n        display: 'grid',\n        gridTemplateColumns: '100px '.repeat(puzzle.n),\n        justifyContent: 'space-around',\n      }}>\n        {puzzle.colCounts.map((c, index) => (\n          <EdgeClue key={index} count={c} />\n        ))}\n      </div>\n      <div style={{\n        gridArea: 'main-section',\n      }}>\n        {children}\n      </div>\n      <div style={{\n        gridArea: 'side-clues',\n        display: 'grid',\n        gridTemplateRows: '100px '.repeat(puzzle.n),\n        alignContent: 'space-around',\n      }}>\n        {puzzle.rowCounts.map((c, index) => (\n          <EdgeClue key={index} count={c} horizontal />\n        ))}\n      </div>\n      {puzzle.totalActive !== -1 && (\n        <div style={{\n          gridArea: 'total-count',\n          textAlign: 'center',\n          justifyContent: 'center',\n        }}>\n          <strong style={{ fontSize: '2em' }}>\n            {puzzle.totalActive}\n          </strong>\n        </div>\n      )}\n    </div>\n  );\n};\n\ninterface InnerPuzzleProps {\n  onToggle: (i: number, j: number) => (newStatus: boolean) => void;\n  puzzle: Puzzle;\n  state: PuzzleState;\n}\n\nexport const PuzzleComponent = (props: InnerPuzzleProps) => {\n  const { onToggle, puzzle, state } = props;\n\n  return (\n    <EdgeWrapper puzzle={puzzle}>\n      <ButtonContainer n={puzzle.n}>\n        {state.enabled.map((status, index) => {\n          const i = index % puzzle.n,\n            j = Math.floor(index / puzzle.n);\n          \n          return (\n            <Button\n              key={index}\n              status={status}\n              onToggle={onToggle(i, j)}\n              i={index % puzzle.n}\n              j={Math.floor(index / puzzle.n)}\n            />\n          );\n        })}\n      </ButtonContainer>\n    </EdgeWrapper>\n  );\n};\n\ninterface Props {\n  details: PuzzleDetails;\n}\n\nexport const PuzzleWrapper = (props: Props) => {\n  const { details } = props;\n\n  const [puzzle] = useState(new Puzzle(details));\n\n  const [state, setState] = useState<PuzzleState>(puzzle.getState());\n\n  const onToggle = useCallback((i: number, j: number) => (newStatus: boolean) => {\n    setState(puzzle.toggle(i, j, newStatus));\n  }, [puzzle]);\n\n  return (\n    <div style={{\n      backgroundColor: state.complete ? 'hsla(120, 80%, 80%, 50%)' : '',\n      padding: '8px',\n    }}>\n      <PuzzleComponent\n        puzzle={puzzle}\n        onToggle={onToggle}\n        state={state}\n      />\n    </div>\n  )\n}\n","import React from 'react';\n\nimport { Container, Typography } from '@material-ui/core';\nimport { PuzzleWrapper } from '../../components/puzzle/PuzzleComponent';\n\nconst PUZZLE_0 = { n: 3, colCounts: [0,1,0], rowCounts: [0,1,0] };\nconst PUZZLE_1 = { n: 3, colCounts: [1,3,1], rowCounts: [2,2,1] };\nconst PUZZLE_2 = { n: 4, colCounts: [2,4,1,1], rowCounts: [3,2,1,2] };\nconst PUZZLE_3 = { n: 5, colCounts: [3,1,3,3,4], rowCounts: [5,2,4,0,3] };\nconst PUZZLE_4 = { n: 5, colCounts: [1,1,2,4,4], rowCounts: [2,4,3,0,3] };\nconst PUZZLE_HARD = { n: 6, colCounts: [1,2,4,1,0,1], rowCounts: [0,4,2,1,1,1] };\n\nconst TodaysPage = () => {\n  return (\n    <Container>\n      <Typography variant=\"h3\">Day 1</Typography>\n      <p>\n        I'm making a grid-based puzzle and going to add a new idea/mechanic to\n        the puzzles each day to make them more interesting/challenging or add\n        variety etc.\n      </p>\n      <p>\n        Core idea for the puzzle on day 1 is that we have a grid, with a hint\n        about how many \"active\" squares there are in each row/column.\n      </p>\n\n      <Typography variant=\"h4\">Intro Puzzle</Typography>\n      <PuzzleWrapper details={PUZZLE_0} />\n      <p>\n        To signify an active square, click to draw a big dot in that square. A\n        right click will mark a square with grey strokes. This counts as the\n        square still being inactive, but can be used as a note-to-self that the\n        square is definitely not active while working out the puzzle.\n      </p>\n      <p>\n        I hope the solution to this one is straightforward enough. The\n        background will turn green once the puzzle is solved.\n      </p>\n\n      <Typography variant=\"h4\">Puzzle #1</Typography>\n      <PuzzleWrapper details={PUZZLE_1} />\n      <p>\n        <strong>Note:</strong> These puzzles do not necessarily have unique\n        solutions.\n      </p>\n\n      <Typography variant=\"h4\">Puzzle #2</Typography>\n      <p>Stepping it up to 4 by 4 now.</p>\n      <PuzzleWrapper details={PUZZLE_2} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #3</Typography>\n      <p>And on to 5 by 5 just as quickly.</p>\n      <PuzzleWrapper details={PUZZLE_3} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #4</Typography>\n      <PuzzleWrapper details={PUZZLE_4} />\n      <br />\n\n      <Typography variant=\"h4\">Final puzzle</Typography>\n      <PuzzleWrapper details={PUZZLE_HARD} />\n      <br />\n    </Container>\n  )\n};\n\nexport default TodaysPage;\n","import React from 'react';\n\nimport { Container, Typography } from '@material-ui/core';\nimport { PuzzleWrapper } from '../../components/puzzle/PuzzleComponent';\n\nconst PUZZLE_0 = { n: 3, colCounts: [0,1,0], rowCounts: [0,-1,-1] };\nconst PUZZLE_0A = { n: 3, colCounts: [0,1,-1], rowCounts: [-1,0,-1], totalActive: 2 };\nconst PUZZLE_1 = { n: 3, colCounts: [2,0,-1], rowCounts: [1,-1,1] };\nconst PUZZLE_2 = { n: 3, colCounts: [2,0,-1], rowCounts: [1,-1,1], totalActive: 3 };\nconst PUZZLE_3 = { n: 4, colCounts: [1,3,-1,2], rowCounts: [-1,-1,2,1], totalActive: 10 };\nconst PUZZLE_4 = { n: 4, colCounts: [3,1,-1,4], rowCounts: [4,-1,3,2], totalActive: 11 };\nconst PUZZLE_HARD_1 = { n: 5, colCounts: [1,-1,-1,3,2], rowCounts: [-1,5,2,-1,2], totalActive: 9 };\nconst PUZZLE_HARD_2 = { n: 5, colCounts: [1,-1,-1,3,2], rowCounts: [-1,5,2,-1,2], totalActive: 16 };\n\nconst TodaysPage = () => {\n  return (\n    <Container>\n      <Typography variant=\"h3\">Day 2</Typography>\n      <p>\n        Let's add a little variety to the very simple concept introduced\n        yesterday.\n      </p>\n      <p>\n        What if we don't know exactly how many active squares are in some of\n        the rows and columns?\n      </p>\n\n      <Typography variant=\"h5\">A note on controls</Typography>\n      <p>\n        To signify an active square, click to draw a big dot in that square. A\n        right click will mark a square with grey strokes. This counts as the\n        square still being inactive, but can be used as a note-to-self that the\n        square is definitely not active while working out the puzzle.\n      </p>\n\n      <Typography variant=\"h4\">Intro Puzzle</Typography>\n      <PuzzleWrapper details={PUZZLE_0} />\n      <p>\n        <strong>Note:</strong> There is a difference between the empty circle\n        and no marking at all.\n      </p>\n      <p>\n        Not too bad yet, I hope.\n      </p>\n\n      <Typography variant=\"h4\">Intro Puzzle #2</Typography>\n      <p>\n        What if we also know how many active squares are in the puzzle <strong>\n        in total</strong>?\n      </p>\n      <PuzzleWrapper details={PUZZLE_0A} />\n      <p>\n          I guess that adds a bit of interest to the scenario.\n      </p>\n\n      <Typography variant=\"h4\">Puzzle #1</Typography>\n      <p>Let's do some puzzles now.</p>\n      <PuzzleWrapper details={PUZZLE_1} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #2</Typography>\n      <p>Does one more change things?</p>\n      <PuzzleWrapper details={PUZZLE_2} />\n      <p>\n        Interestingly, there are still more solutions to even this puzzle than\n        I thought at first.\n      </p>\n\n      <Typography variant=\"h4\">Puzzle #3</Typography>\n      <PuzzleWrapper details={PUZZLE_3} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #4</Typography>\n      <PuzzleWrapper details={PUZZLE_4} />\n      <br />\n\n      <Typography variant=\"h4\">Final puzzle #1</Typography>\n      <PuzzleWrapper details={PUZZLE_HARD_1} />\n      <br />\n\n      <Typography variant=\"h4\">Final puzzle #2</Typography>\n      <p>Identical to the puzzle above except for the total count.</p>\n      <PuzzleWrapper details={PUZZLE_HARD_2} />\n      <br />\n    </Container>\n  )\n};\n\nexport default TodaysPage;\n","import React from 'react';\n\nimport { Container, Typography } from '@material-ui/core';\nimport { PuzzleWrapper } from '../../components/puzzle/PuzzleComponent';\n\nconst PUZZLE_0 = { n: 3, colCounts: [0,-1,0], rowCounts: [-1,-1,-1], totalActive: 2, numContinents: 2 };\nconst PUZZLE_0A = { n: 3, colCounts: [-1,-1,-1], rowCounts: [-1,-1,-1], totalActive: 4, numContinents: 3 };\nconst PUZZLE_1 = { n: 3, colCounts: [2,1,2], rowCounts: [1,2,2], numContinents: 2 };\nconst PUZZLE_2 = { n: 3, colCounts: [-1,1,3], rowCounts: [-1,2,2], numContinents: 2 };\nconst PUZZLE_3 = { n: 4, colCounts: [2,4,2,-1], rowCounts: [2,4,-1,-1], totalActive: 10, numContinents: 2 };\nconst PUZZLE_4 = { n: 4, colCounts: [3,2,-1,0], rowCounts: [3,1,2,-1], totalActive: 8, numContinents: 2 };\nconst PUZZLE_HARD_1 = { n: 5, colCounts: [-1,2,2,3,1], rowCounts: [3,2,1,-1,1], totalActive: 9, numContinents: 2 }; // 184867\nconst PUZZLE_HARD_2 = { n: 5, colCounts: [-1,2,2,3,1], rowCounts: [3,2,1,-1,1], totalActive: 9, numContinents: 8 };\n\nconst TodaysPage = () => {\n  return (\n    <Container>\n      <Typography variant=\"h3\">Day 3</Typography>\n      <p>\n        Let's continue adding more features!\n      </p>\n\n      <Typography variant=\"h5\">A note on controls</Typography>\n      <p>\n        To signify an active square, click to draw a big dot in that square. A\n        right click will mark a square with grey strokes. This counts as the\n        square still being inactive, but can be used as a note-to-self that the\n        square is definitely not active while working out the puzzle.\n      </p>\n\n      <Typography variant=\"h4\">Intro Puzzle</Typography>\n      <PuzzleWrapper details={PUZZLE_0} />\n      <br />\n\n      <Typography variant=\"h4\">Intro Puzzle #2</Typography>\n      <p>\n        You can play around here to understand better what the rule is for\n        today.\n      </p>\n      <PuzzleWrapper details={PUZZLE_0A} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #1</Typography>\n      <p>Let's do some puzzles now.</p>\n      <PuzzleWrapper details={PUZZLE_1} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #2</Typography>\n      <PuzzleWrapper details={PUZZLE_2} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #3</Typography>\n      <PuzzleWrapper details={PUZZLE_3} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #4</Typography>\n      <PuzzleWrapper details={PUZZLE_4} />\n      <br />\n\n      <Typography variant=\"h4\">Final puzzle #1</Typography>\n      <PuzzleWrapper details={PUZZLE_HARD_1} />\n      <br />\n\n      <Typography variant=\"h4\">Final puzzle #2</Typography>\n      <p>Almost identical to the puzzle above.</p>\n      <PuzzleWrapper details={PUZZLE_HARD_2} />\n      <br />\n    </Container>\n  )\n};\n\nexport default TodaysPage;\n","import Day1 from './day1';\nimport Day2 from './day2';\nimport Day3 from './day3';\n\ninterface DayInfo {\n  title: string;\n  description?: string;\n  link: string;\n  component: React.ReactNode;\n}\n\nexport const dayData: DayInfo[] = [\n  {\n    title: 'Day 1: the beginning',\n    description: 'The first day',\n    link: '/days/1',\n    component: Day1,\n  },\n  {\n    title: 'Day 2: some variation',\n    description: 'Adding a little variety/ambiguity',\n    link: '/days/2',\n    component: Day2,\n  },\n  {\n    title: 'Day 3: more ideas',\n    description: 'Something something',\n    link: '/days/3',\n    component: Day3,\n  },\n];\n","import React from 'react';\n\nimport { Card, CardContent, Container, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport { dayData } from '../days';\n\nconst HomePage = () => {\n  return (\n    <Container>\n      <Typography variant=\"h3\">Grid puzzles website</Typography>\n      <p>Hopefully the home of some interesting puzzles.</p>\n      {dayData.map(day => (\n        <>\n          <Link key={day.link} to={day.link}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\">{day.title}</Typography>\n                {day.description && (<p>{day.description}</p>)}\n              </CardContent>\n            </Card>\n          </Link>\n          <br />\n        </>\n      ))}\n    </Container>\n  )\n};\n\nexport default HomePage;\n","import React from 'react';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\n\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\n\nimport HomePage from './pages/homepage';\nimport { dayData } from './pages/days';\n\nconst NavItem = (props: { children: React.ReactChild, to: string }) => {\n  return (\n    <Link to={props.to} style={{ textDecoration: 'none', color: 'white', marginLeft: '20px' }}>\n      <Typography variant=\"button\">\n        {props.children}\n      </Typography>\n    </Link>\n  );\n}\n\nfunction App() {\n  return (\n    <Router>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h5\">\n            Grid Puzzle\n          </Typography>\n          <NavItem to=\"/\">Home</NavItem>\n          <NavItem to={dayData[0].link}>Day 1</NavItem>\n          <NavItem to={dayData[dayData.length - 1].link}>Today</NavItem>\n        </Toolbar>\n      </AppBar>\n      <Switch>\n        {dayData.map((data, index) => (\n          <Route key={index} path={data.link}>\n            {data.component}\n          </Route>\n        ))}\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}