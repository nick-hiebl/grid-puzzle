{"version":3,"sources":["api/puzzle/countContinents.ts","api/puzzle/types.ts","api/puzzle/Puzzle.ts","components/puzzle/PuzzleComponent.tsx","api/puzzle/index.ts","pages/days/day1.tsx","pages/days/day2.tsx","pages/days/day3.tsx","pages/days/utils.tsx","pages/days/day4.tsx","pages/days/day5.tsx","pages/days/index.tsx","pages/homepage/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["countContinents","EdgeClue","state","sequence","enabled","map","v","k","forEach","index","n","i","colour","queue","length","splice","x","push","flood","clueToCount","value","clueToClue","PlaygroundFeatures","Puzzle","details","colCounts","rowCounts","colRules","rowRules","minTotal","maxTotal","numContinents","this","Array","fill","complete","colClues","rowClues","some","Error","JSON","stringify","totalActive","fallback","undefined","readFallback","line","rule","count","NO_TRIPLES","seq","hasTriples","reduce","a","b","slice","isLineValid","filter","_","subIndex","total","toString","isCountValid","isRowValid","isColValid","j","status","newState","isValid","GREEN_TO_RED","defaultPuzzle","PuzzleContext","React","createContext","puzzle","PuzzleStateContext","getState","usePuzzle","useContext","useEffect","console","warn","usePuzzleState","image","path","process","CHECKED_IMAGES","UNCHECKED_IMAGES","concat","Image","src","randomImage","checked","Math","floor","random","Button","props","useState","img","setImage","setEnabled","isPlayground","onToggle","onClick","useCallback","event","type","isRightClick","preventDefault","onContextMenu","style","border","backgroundImage","backgroundColor","backgroundSize","padding","containerStyle","display","gridTemplateColumns","repeat","gridTemplateRows","ButtonContainer","children","clueStyle","alignItems","justifyContent","textAlign","RULE_DETAILS","alt","EdgeClueComponent","horizontal","highlightErrors","useEdgeClueHighlight","text","Clue","width","color","coreStyle","transform","height","fontSize","fontWeight","columnStyles","gridArea","DetailsColumn","playgroundFeatures","anyDetails","includes","CONTINENTS","shouldHighlight","ActiveCount","totalRequirement","EdgeWrapper","gridTemplateAreas","c","alignContent","PuzzleComponent","PuzzleWrapper","puzzleContext","setState","newStatus","toggle","Provider","PUZZLE_0","PUZZLE_1","PUZZLE_2","PUZZLE_3","PUZZLE_4","PUZZLE_HARD","TodaysPage","Container","links","Typography","variant","PUZZLE_0A","PUZZLE_HARD_1","PUZZLE_HARD_2","PUZZLE_0B","PLAYGROUND","PUZZLE_0C","PUZZLE_0D","PUZZLE_0E","PUZZLE_0F","PUZZLE_5","DayLink","dayData","link","title","to","description","component","Day1","Day2","Day3","hidden","HomePage","day","Card","CardContent","ScrollToTop","withRouter","history","unlisten","listen","window","scrollTo","NavItem","textDecoration","marginLeft","shownDays","App","AppBar","position","Toolbar","Component","paddingTop","marginBottom","float","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.233819c9.chunk.js","sourcesContent":["import { PuzzleState } from './types';\n\nfunction flood(sequence: number[], n: number, i: number, colour: number) {\n  const queue = [i];\n\n  while (queue.length) {\n    const [v] = queue.splice(0, 1);\n    if (sequence[v] === colour || sequence[v] === 0) {\n      continue;\n    }\n\n    sequence[v] = colour;\n\n    const x = v % n;\n    if (x > 0) queue.push(v - 1);\n    if (x < n-1) queue.push(v + 1);\n    if (v >= n) queue.push(v - n);\n    if (v < n * n - n) queue.push(v + n);\n  }\n}\n\nexport function countContinents(state: PuzzleState): number {\n  const sequence = state.enabled.map(v => +v);\n  let k = 0;\n\n  sequence.forEach((v, index) => {\n    if (v === 1) {\n      // Use k+2 to avoid conflicting with 1\n      flood(sequence, state.n, index, k + 2);\n      k += 1;\n    }\n  });\n\n  return k;\n}\n\nexport default countContinents;\n","export interface PuzzleState {\n  n: number;\n  complete: boolean;\n  enabled: boolean[];\n}\n\nexport enum EdgeClue {\n  NO_TRIPLES = 'NO_TRIPLES',\n}\n\nexport interface PuzzleDetails {\n  n: number;\n  colClues?: (number | EdgeClue | null)[];\n  rowClues?: (number | EdgeClue | null)[];\n  totalActive?: number;\n  minTotal?: number;\n  maxTotal?: number;\n  numContinents?: number;\n}\n","import countContinents from './countContinents';\nimport type { PuzzleDetails, PuzzleState } from './types';\nimport { EdgeClue } from './types';\n\nfunction readFallback(value: number | undefined, fallback = -1) {\n  if (value === undefined) {\n    return fallback;\n  }\n\n  return value;\n}\n\nfunction clueToCount(value: number | EdgeClue | null): number {\n  if (typeof(value) == 'number') {\n    return value;\n  }\n\n  return -1;\n}\n\nfunction clueToClue(value: number | EdgeClue | null): EdgeClue | null {\n  if (typeof(value) == 'number' || value == null) {\n    return null;\n  }\n\n  return value;\n}\n\nfunction hasTriples(seq: boolean[]) {\n  let count = 0;\n  for (const item of seq) {\n    if (item) count++;\n    else count = 0;\n\n    if (count === 3) return true;\n  }\n\n  return false;\n}\n\nexport default class Puzzle {\n  readonly n: number;\n\n  state: PuzzleState;\n\n  readonly colCounts: number[];\n  readonly rowCounts: number[];\n  readonly colRules: (EdgeClue | null)[];\n  readonly rowRules: (EdgeClue | null)[];\n  private readonly minTotal: number | undefined;\n  private readonly maxTotal: number | undefined;\n  readonly numContinents: number;\n\n  constructor(details: PuzzleDetails) {\n    const n = details.n;\n\n    this.n = n;\n\n    this.state = {\n      enabled: Array(n * n).fill(false),\n      complete: false,\n      n,\n    };\n\n    this.colCounts = (details.colClues || Array(n).fill(null)).map(clueToCount);\n    this.rowCounts = (details.rowClues || Array(n).fill(null)).map(clueToCount);\n\n    this.colRules = (details.colClues || Array(n).fill(null)).map(clueToClue);\n    this.rowRules = (details.rowClues || Array(n).fill(null)).map(clueToClue);\n\n    if (this.colCounts.some(v => v < -1 || v > n)) {\n      throw new Error('Invalid requirement forsome column ' + JSON.stringify(this.colCounts));\n    }\n    if (this.rowCounts.some(v => v < -1 || v > n)) {\n      throw new Error('Invalid requirement forsome column ' + JSON.stringify(this.rowCounts));\n    }\n\n    if (details.totalActive) {\n      this.maxTotal = this.minTotal = details.totalActive;\n    } else {\n      this.maxTotal = details.maxTotal;\n      this.minTotal = details.minTotal;\n    }\n\n    this.numContinents = readFallback(details.numContinents);\n  }\n\n  isLineValid(line: boolean[], rule: EdgeClue | null, count: number): boolean {\n    if (rule === EdgeClue.NO_TRIPLES) {\n      if (hasTriples(line)) {\n        return false;\n      }\n    }\n\n    if (count === -1) return true;\n\n    const sum = line.reduce((a, b) => a + (+b), 0);\n\n    return sum === count;\n  }\n\n  isRowValid(state: PuzzleState, index: number) {\n    const line = state.enabled.slice(index * this.n, (index + 1) * this.n);\n\n    return this.isLineValid(line, this.rowRules[index], this.rowCounts[index]);\n  }\n\n  isColValid(state: PuzzleState, index: number) {\n    const line = state.enabled.filter((_, subIndex) => subIndex % this.n === index);\n\n    return this.isLineValid(line, this.colRules[index], this.colCounts[index]);\n  }\n\n  static countContinents(state: PuzzleState) {\n    return countContinents(state);\n  }\n\n  isCountValid(state: PuzzleState) {\n    if (!this.maxTotal && !this.minTotal) {\n      return true;\n    }\n\n    const total = state.enabled.reduce((a, b) => a + (+b), 0);\n\n    if (this.maxTotal && total > this.maxTotal) {\n      return false;\n    } else if (this.minTotal && total < this.minTotal) {\n      return false;\n    }\n\n    return true;\n  }\n\n  totalRequirement(): string | undefined {\n    if (this.minTotal && this.maxTotal) {\n      if (this.minTotal === this.maxTotal) {\n        return this.minTotal.toString();\n      }\n\n      return `${this.minTotal}-${this.maxTotal}`;\n    } else if (this.minTotal) {\n      return `≥${this.minTotal}`;\n    } else if (this.maxTotal) {\n      return `≤${this.maxTotal}`;\n    }\n  }\n\n  isValid(state: PuzzleState): boolean {\n    if (!this.isCountValid(state)) return false;\n\n    for (let i = 0; i < this.n; i++) {\n      if (!this.isRowValid(state, i)) return false;\n      if (!this.isColValid(state, i)) return false;\n    }\n\n    if (this.numContinents !== -1) {\n      const continents = countContinents(state);\n\n      if (continents !== this.numContinents) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getState(): PuzzleState {\n    return this.state;\n  }\n\n  read(i: number, j: number): boolean {\n    const index = i + j * this.n;\n\n    return this.state.enabled[index];\n  }\n\n  toggle(i: number, j: number, status: boolean): PuzzleState {\n    const index = i + j * this.n;\n    const newState = {\n      enabled: this.state.enabled.slice(),\n      complete: false,\n      n: this.n,\n    };\n    newState.enabled[index] = status;\n    newState.complete = this.isValid(newState);\n\n    this.state = newState;\n\n    return this.state;\n  }\n}\n","import React, { CSSProperties, useCallback, useContext, useEffect, useState } from 'react';\n\nimport Puzzle from '../../api/puzzle';\nimport type { PuzzleDetails, PuzzleState } from '../../api/puzzle';\nimport { EdgeClue } from '../../api/puzzle';\n\nconst GREEN_TO_BLUE = 'brightness(0) saturate(100%) invert(41%) sepia(48%) saturate(4528%) hue-rotate(200deg) brightness(99%) contrast(105%)';\nconst GREEN_TO_RED = 'brightness(0) saturate(100%) invert(11%) sepia(98%) saturate(7155%) hue-rotate(0deg) brightness(101%) contrast(109%)';\n\nconst defaultPuzzle = new Puzzle({ n: 1 });\n\nexport enum PlaygroundFeatures {\n  CONTINENTS,\n}\n\ninterface PuzzleInfo {\n  puzzle: Puzzle;\n  isPlayground?: boolean;\n  playgroundFeatures?: PlaygroundFeatures[];\n  highlightErrors?: boolean;\n}\n\nconst PuzzleContext = React.createContext<PuzzleInfo>({ puzzle: defaultPuzzle });\n\ntype PuzzleStateUpdater = (i: number, j: number, status: boolean) => void;\n\nconst PuzzleStateContext = React.createContext<\n  [PuzzleState, PuzzleStateUpdater]\n>([defaultPuzzle.getState(), () => {}]);\n\nconst usePuzzle = () => {\n  const x = useContext(PuzzleContext);\n\n  useEffect(() => {\n    console.warn('Re-rendering puzzle state');\n  }, [x]);\n\n  return x;\n}\nconst usePuzzleState = () => useContext(PuzzleStateContext);\n\ninterface ButtonProps {\n  i: number;\n  j: number;\n  status: boolean;\n}\n\nfunction image(path: string) {\n  return `${process.env.PUBLIC_URL}/${path}`;\n}\n\nconst CHECKED_IMAGES = [\n  'checked-1.png',\n  'checked-2.png',\n  'checked-3.png',\n].map(image);\n\nconst UNCHECKED_IMAGES = [\n  'unchecked-1.png',\n  'unchecked-2.png',\n  'unchecked-3.png',\n].map(image);\n\nfor (const image of CHECKED_IMAGES.concat(UNCHECKED_IMAGES)) {\n  const preload = new Image();\n  preload.src = image;\n}\n\nconst randomImage = (checked: boolean) => {\n  if (checked) {\n    return CHECKED_IMAGES[Math.floor(Math.random() * CHECKED_IMAGES.length)];\n  }\n\n  return UNCHECKED_IMAGES[Math.floor(Math.random() * UNCHECKED_IMAGES.length)];\n}\n\nfunction isRightClick(event: React.MouseEvent) {\n  if ('type' in event) {\n    if (event.type === 'click') {\n      return false;\n    } else if (event.type === 'contextmenu') {\n      return true;\n    }\n  }\n  if ('which' in event) {\n    return event['which'] === 3;\n  } else if ('button' in event) {\n    return event['button'] === 2;\n  }\n\n  return false;\n}\n\nconst Button = (props: ButtonProps) => {\n  const { i, j, status } = props;\n  const [img, setImage] = useState(randomImage(status));\n  const [enabled, setEnabled] = useState(false);\n\n  const { isPlayground } = usePuzzle();\n\n  const [, onToggle] = usePuzzleState();\n\n  useEffect(() => {\n    setImage(randomImage(status));\n  }, [status]);\n\n  const onClick = useCallback((event: React.MouseEvent) => {\n    if (isRightClick(event)) {\n      // Suppress context menu\n      event.preventDefault();\n      setImage(randomImage(false));\n      if (status || !enabled) {\n        onToggle(i, j, false);\n        setEnabled(true);\n      } else {\n        setEnabled(false);\n      }\n    } else {\n      if (status) {\n        setImage(randomImage(false));\n        onToggle(i, j, false);\n        setEnabled(false);\n      } else {\n        setImage(randomImage(true));\n        onToggle(i, j, true);\n        setEnabled(true);\n      }\n    }\n  }, [enabled, i, j, onToggle, status]);\n\n  return (\n    <button\n      onClick={onClick}\n      onContextMenu={onClick}\n      style={{\n        border: `2px solid ${isPlayground ? '#147eff' : 'black'}`,\n        backgroundImage: enabled ? `url(${img})` : '',\n        backgroundColor: 'white',\n        backgroundSize: 'cover',\n        padding: '0',\n      }}\n    />\n  );\n};\n\nconst containerStyle = (n: number, isPlayground?: boolean): CSSProperties => ({\n  display: 'inline-grid',\n  gridTemplateColumns: '100px '.repeat(n),\n  gridTemplateRows: '100px '.repeat(n),\n  border: `4px solid ${isPlayground ? '#147eff' : 'black'}`,\n});\n\ninterface ButtonContainerProps {\n  children: React.ReactElement[];\n}\n\nconst ButtonContainer = (props: ButtonContainerProps) => {\n  const { puzzle, isPlayground } = usePuzzle();\n  return (\n    <div style={containerStyle(puzzle.n, isPlayground)}>\n      {props.children}\n    </div>\n  );\n};\n\nconst edgeStyle = (n: number): CSSProperties => ({\n  display: 'inline-grid',\n  gridTemplateRows: `45px ${n * 100 + 8}px`,\n  gridTemplateColumns: `auto ${n * 100 + 8}px 45px`,\n  gridTemplateAreas: '\"extra-details top-clues total-count\" \"extra-details main-section side-clues\"',\n});\n\nconst clueStyle: CSSProperties = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  textAlign: 'center',\n};\n\nconst RULE_DETAILS: Record<EdgeClue, { image: string; alt: string }> = {\n  [EdgeClue.NO_TRIPLES]: {\n    image: image('counts/circle-circle-cross.png'),\n    alt: 'Circle circle cross',\n  },\n};\n\nconst useEdgeClueHighlight = (horizontal: boolean, index: number): boolean => {\n  const { puzzle, highlightErrors } = usePuzzle();\n  const [state] = usePuzzleState();\n\n  if (!highlightErrors) {\n    return false;\n  }\n\n  if (horizontal) {\n    return !puzzle.isRowValid(state, index);\n  } else {\n    return !puzzle.isColValid(state, index);\n  }\n};\n\nconst EdgeClueComponent = (props: { count: number; rule?: EdgeClue | null; horizontal?: boolean; index: number }) => {\n  const { count, horizontal, index, rule } = props;\n\n  const shouldHighlight = useEdgeClueHighlight(!!horizontal, index);\n\n  const filter = shouldHighlight ? GREEN_TO_RED : undefined;\n\n  if (count > 6) {\n    return (\n      <Clue text={count.toString()} horizontal={horizontal} filter={filter} />\n    );\n  }\n\n  if (count >= 0) {\n    return (\n      <Clue\n        alt={`${count} in this ${horizontal ? 'row' : 'column'}`}\n        image={image(`counts/dot-${count}.png`)}\n        horizontal={horizontal}\n        filter={filter}\n      />\n    );\n  }\n\n  if (rule) {\n    return (\n      <Clue\n        {...RULE_DETAILS[rule]}\n        horizontal={horizontal}\n        filter={filter}\n      />\n    )\n  }\n\n  return <div></div>;\n};\n\ninterface ClueProps {\n  horizontal?: boolean;\n  image?: string;\n  alt?: string;\n  text?: string;\n  width?: string;\n  color?: string;\n  filter?: string;\n}\n\nconst Clue = (props: ClueProps) => {\n  const {\n    alt,\n    text,\n    image,\n    horizontal,\n    width = '45px',\n    filter = 'grayscale(100%) brightness(0%)',\n    color = 'black',\n  } = props;\n\n  const coreStyle: CSSProperties = {\n    transform: horizontal ? 'rotate(90deg)' : undefined,\n    width,\n    height: width,\n    filter,\n    color,\n  };\n\n  if (image && text) {\n    return (\n      <div style={{\n        ...coreStyle,\n        ...clueStyle,\n        backgroundImage: `url(${image})`,\n        backgroundSize: 'cover',\n        fontSize: '2em',\n        fontWeight: 900,\n      }}>\n        {text}\n      </div>\n    );\n  }\n\n  return (\n    <div style={clueStyle}>\n      {image && (\n        <img\n          alt={alt}\n          style={coreStyle}\n          src={image}\n        />\n      )}\n      {text && text}\n    </div>\n  );\n};\n\nconst columnStyles: CSSProperties = {\n  width: '100px',\n  height: '100%',\n  gridArea: 'extra-details',\n  display: 'flex',\n  alignItems: 'space-evenly',\n  justifyContent: 'center',\n};\n\nconst DetailsColumn = () => {\n  const { puzzle, isPlayground, playgroundFeatures, highlightErrors } = usePuzzle();\n  const [state] = usePuzzleState();\n\n  const anyDetails = puzzle.numContinents !== -1;\n\n  if (isPlayground && playgroundFeatures?.length) {\n    return (\n      <div style={columnStyles}>\n        {playgroundFeatures.includes(PlaygroundFeatures.CONTINENTS) && (\n          <Clue\n            image={image('counts/continent.png')}\n            alt=\"Number of continents\"\n            text={Puzzle.countContinents(state).toString()}\n            width=\"60px\"\n            color=\"#007e00\"\n            filter={GREEN_TO_BLUE}\n          />\n        )}\n      </div>\n    );\n  }\n\n  if (!anyDetails) {\n    return null;\n  }\n\n  const shouldHighlight = highlightErrors\n    && puzzle.numContinents !== -1 // Continent count matters\n    && Puzzle.countContinents(state) !== puzzle.numContinents; // Continent count is wrong\n\n  return (\n    <div style={columnStyles}>\n      {puzzle.numContinents !== -1 && (\n        <Clue\n          image={image('counts/continent.png')}\n          alt=\"Number of continents\"\n          text={puzzle.numContinents.toString()}\n          width=\"60px\"\n          filter={shouldHighlight ? GREEN_TO_RED : undefined}\n        />\n      )}\n    </div>\n  )\n};\n\nconst ActiveCount = () => {\n  const { puzzle, highlightErrors } = usePuzzle();\n  const [state] = usePuzzleState();\n\n  const totalRequirement = puzzle.totalRequirement();\n\n  if (!totalRequirement) {\n    return null;\n  }\n\n  const shouldHighlight = highlightErrors\n    && !puzzle.isCountValid(state);\n\n  return (\n    <div style={{\n      gridArea: 'total-count',\n      textAlign: 'center',\n      justifyContent: 'center',\n    }}>\n      <strong style={{ fontSize: '2em', color: shouldHighlight ? 'red' : 'inherit' }}>\n        {totalRequirement}\n      </strong>\n    </div>\n  );\n}\n\nconst EdgeWrapper = (props: { children: React.ReactElement }) => {\n  const { children } = props;\n\n  const { puzzle, playgroundFeatures } = usePuzzle();\n\n  const anyEdgeClues = puzzle.colCounts.some(v => v >= 0)\n    || puzzle.rowCounts.some(v => v >= 0);\n  \n  if (!anyEdgeClues && !puzzle.totalRequirement() && !playgroundFeatures?.length) {\n    return children;\n  }\n\n  return (\n    <div style={edgeStyle(puzzle.n)}>\n      <DetailsColumn />\n      <div style={{\n        gridArea: 'top-clues',\n        display: 'grid',\n        gridTemplateColumns: '100px '.repeat(puzzle.n),\n        justifyContent: 'space-around',\n      }}>\n        {puzzle.colCounts.map((c, index) => (\n          <EdgeClueComponent\n            key={index}\n            index={index}\n            count={c}\n            rule={puzzle.colRules[index]}\n          />\n        ))}\n      </div>\n      <div style={{\n        gridArea: 'main-section',\n      }}>\n        {children}\n      </div>\n      <div style={{\n        gridArea: 'side-clues',\n        display: 'grid',\n        gridTemplateRows: '100px '.repeat(puzzle.n),\n        alignContent: 'space-around',\n      }}>\n        {puzzle.rowCounts.map((c, index) => (\n          <EdgeClueComponent\n            key={index}\n            index={index}\n            count={c}\n            rule={puzzle.rowRules[index]}\n            horizontal\n          />\n        ))}\n      </div>\n      <ActiveCount />\n    </div>\n  );\n};\n\nexport const PuzzleComponent = () => {\n  const [state] = usePuzzleState();\n\n  return (\n    <EdgeWrapper>\n      <ButtonContainer>\n        {state.enabled.map((status, index) => (\n          <Button\n            key={index}\n            status={status}\n            i={index % state.n}\n            j={Math.floor(index / state.n)}\n          />\n        ))}\n      </ButtonContainer>\n    </EdgeWrapper>\n  );\n};\n\ninterface Props {\n  details: PuzzleDetails;\n  isPlayground?: boolean;\n  playgroundFeatures?: PlaygroundFeatures[];\n  highlightErrors?: boolean;\n}\n\nexport const PuzzleWrapper = (props: Props) => {\n  const { details, highlightErrors, isPlayground, playgroundFeatures } = props;\n\n  const [puzzleContext] = useState<PuzzleInfo>({\n    puzzle: new Puzzle(details),\n    isPlayground,\n    playgroundFeatures,\n    highlightErrors,\n  });\n\n  const { puzzle } = puzzleContext;\n\n  const [state, setState] = useState<PuzzleState>(puzzle.getState());\n\n  const onToggle = useCallback((i: number, j: number, newStatus: boolean) => {\n    setState(puzzle.toggle(i, j, newStatus));\n  }, [puzzle]);\n\n  return (\n    <PuzzleContext.Provider value={puzzleContext}>\n      <PuzzleStateContext.Provider value={[state, onToggle]}>\n        <div style={{\n          backgroundColor: (state.complete && !isPlayground) ? 'hsla(120, 80%, 80%, 50%)' : '',\n          padding: '8px',\n        }}>\n          <PuzzleComponent />\n        </div>\n      </PuzzleStateContext.Provider>\n    </PuzzleContext.Provider>\n  )\n}\n","import Puzzle from './Puzzle';\n\nexport default Puzzle;\n\nexport type { PuzzleDetails, PuzzleState } from './types';\nexport { EdgeClue } from './types';\n","import React from 'react';\n\nimport { Container, Typography } from '@material-ui/core';\nimport { PuzzleWrapper } from '../../components/puzzle/PuzzleComponent';\n\nimport type { DayProps } from './types';\n\nconst PUZZLE_0 = { n: 3, colClues: [0,1,0], rowClues: [0,1,0] };\nconst PUZZLE_1 = { n: 3, colClues: [1,3,1], rowClues: [2,2,1] };\nconst PUZZLE_2 = { n: 4, colClues: [2,4,1,1], rowClues: [3,2,1,2] };\nconst PUZZLE_3 = { n: 5, colClues: [3,1,3,3,4], rowClues: [5,2,4,0,3] };\nconst PUZZLE_4 = { n: 5, colClues: [1,1,2,4,4], rowClues: [2,4,3,0,3] };\nconst PUZZLE_HARD = { n: 6, colClues: [1,2,4,1,0,1], rowClues: [0,4,2,1,1,1] };\n\nconst TodaysPage = (props: DayProps) => {\n  return (\n    <Container>\n      {props.links}\n      <Typography variant=\"h3\">Day 1</Typography>\n      <p>\n        I'm making a grid-based puzzle and going to add a new idea/mechanic to\n        the puzzles each day to make them more interesting/challenging or add\n        variety etc.\n      </p>\n      <p>\n        Core idea for the puzzle on day 1 is that we have a grid, with a hint\n        about how many \"active\" squares there are in each row/column.\n      </p>\n\n      <Typography variant=\"h4\">Intro Puzzle</Typography>\n      <PuzzleWrapper details={PUZZLE_0} />\n      <p>\n        To signify an active square, click to draw a big dot in that square. A\n        right click will mark a square with grey strokes. This counts as the\n        square still being inactive, but can be used as a note-to-self that the\n        square is definitely not active while working out the puzzle.\n      </p>\n      <p>\n        I hope the solution to this one is straightforward enough. The\n        background will turn green once the puzzle is solved.\n      </p>\n\n      <Typography variant=\"h4\">Puzzle #1</Typography>\n      <PuzzleWrapper details={PUZZLE_1} />\n      <p>\n        <strong>Note:</strong> These puzzles do not necessarily have unique\n        solutions.\n      </p>\n\n      <Typography variant=\"h4\">Puzzle #2</Typography>\n      <p>Stepping it up to 4 by 4 now.</p>\n      <PuzzleWrapper details={PUZZLE_2} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #3</Typography>\n      <p>And on to 5 by 5 just as quickly.</p>\n      <PuzzleWrapper details={PUZZLE_3} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #4</Typography>\n      <PuzzleWrapper details={PUZZLE_4} />\n      <br />\n\n      <Typography variant=\"h4\">Final puzzle</Typography>\n      <PuzzleWrapper details={PUZZLE_HARD} />\n      <br />\n      {props.links}\n    </Container>\n  )\n};\n\nexport default TodaysPage;\n","import React from 'react';\n\nimport { Container, Typography } from '@material-ui/core';\nimport { PuzzleWrapper } from '../../components/puzzle/PuzzleComponent';\n\nimport type { DayProps } from './types';\n\nconst PUZZLE_0 = { n: 3, colClues: [0,1,0], rowClues: [0,-1,-1] };\nconst PUZZLE_0A = { n: 3, colClues: [0,1,-1], rowClues: [-1,0,-1], totalActive: 2 };\nconst PUZZLE_1 = { n: 3, colClues: [2,0,-1], rowClues: [1,-1,1] };\nconst PUZZLE_2 = { n: 3, colClues: [2,0,-1], rowClues: [1,-1,1], totalActive: 3 };\nconst PUZZLE_3 = { n: 4, colClues: [1,3,-1,2], rowClues: [-1,-1,2,1], totalActive: 10 };\nconst PUZZLE_4 = { n: 4, colClues: [3,1,-1,4], rowClues: [4,-1,3,2], totalActive: 11 };\nconst PUZZLE_HARD_1 = { n: 5, colClues: [1,-1,-1,3,2], rowClues: [-1,5,2,-1,2], totalActive: 9 };\nconst PUZZLE_HARD_2 = { n: 5, colClues: [1,-1,-1,3,2], rowClues: [-1,5,2,-1,2], totalActive: 16 };\n\nconst TodaysPage = (props: DayProps) => {\n  return (\n    <Container>\n      {props.links}\n      <Typography variant=\"h3\">Day 2</Typography>\n      <p>\n        Let's add a little variety to the very simple concept introduced\n        yesterday.\n      </p>\n      <p>\n        What if we don't know exactly how many active squares are in some of\n        the rows and columns?\n      </p>\n\n      <Typography variant=\"h5\">A note on controls</Typography>\n      <p>\n        To signify an active square, click to draw a big dot in that square. A\n        right click will mark a square with grey strokes. This counts as the\n        square still being inactive, but can be used as a note-to-self that the\n        square is definitely not active while working out the puzzle.\n      </p>\n\n      <Typography variant=\"h4\">Intro Puzzle</Typography>\n      <PuzzleWrapper details={PUZZLE_0} />\n      <p>\n        <strong>Note:</strong> There is a difference between the empty circle\n        and no marking at all.\n      </p>\n      <p>\n        Not too bad yet, I hope.\n      </p>\n\n      <Typography variant=\"h4\">Intro Puzzle #2</Typography>\n      <p>\n        What if we also know how many active squares are in the puzzle <strong>\n        in total</strong>?\n      </p>\n      <PuzzleWrapper details={PUZZLE_0A} />\n      <p>\n          I guess that adds a bit of interest to the scenario.\n      </p>\n\n      <Typography variant=\"h4\">Puzzle #1</Typography>\n      <p>Let's do some puzzles now.</p>\n      <PuzzleWrapper details={PUZZLE_1} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #2</Typography>\n      <p>Does one more change things?</p>\n      <PuzzleWrapper details={PUZZLE_2} />\n      <p>\n        Interestingly, there are still more solutions to even this puzzle than\n        I thought at first.\n      </p>\n\n      <Typography variant=\"h4\">Puzzle #3</Typography>\n      <PuzzleWrapper details={PUZZLE_3} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #4</Typography>\n      <PuzzleWrapper details={PUZZLE_4} />\n      <br />\n\n      <Typography variant=\"h4\">Final puzzle #1</Typography>\n      <PuzzleWrapper details={PUZZLE_HARD_1} />\n      <br />\n\n      <Typography variant=\"h4\">Final puzzle #2</Typography>\n      <p>Identical to the puzzle above except for the total count.</p>\n      <PuzzleWrapper details={PUZZLE_HARD_2} />\n      <br />\n      {props.links}\n    </Container>\n  )\n};\n\nexport default TodaysPage;\n","import React from 'react';\n\nimport { Container, Typography } from '@material-ui/core';\nimport { PlaygroundFeatures, PuzzleWrapper } from '../../components/puzzle/PuzzleComponent';\n\nimport type { DayProps } from './types';\n\nconst PUZZLE_0 = { n: 3, colClues: [0,null,0], rowClues: [null,null,null], totalActive: 2, numContinents: 2 };\nconst PUZZLE_0A = { n: 2, colClues: [null,null], rowClues: [null,null], totalActive: 2, numContinents: 1 };\nconst PUZZLE_0B = { n: 2, colClues: [null,null], rowClues: [null,null], totalActive: 2, numContinents: 2 };\nconst PLAYGROUND = { n: 4 };\nconst PUZZLE_0C = { n: 3, colClues: [null,null,null], rowClues: [null,null,null], totalActive: 4, numContinents: 1 };\nconst PUZZLE_0D = { n: 3, colClues: [null,null,null], rowClues: [null,null,null], totalActive: 4, numContinents: 2 };\nconst PUZZLE_0E = { n: 3, colClues: [null,null,null], rowClues: [null,null,null], totalActive: 4, numContinents: 3 };\nconst PUZZLE_0F = { n: 3, colClues: [null,null,null], rowClues: [null,null,null], totalActive: 4, numContinents: 4 };\nconst PUZZLE_1 = { n: 3, colClues: [2,1,2], rowClues: [1,2,2], numContinents: 2 };\nconst PUZZLE_2 = { n: 3, colClues: [null,1,3], rowClues: [null,2,2], numContinents: 2 };\nconst PUZZLE_3 = { n: 4, colClues: [2,4,2,null], rowClues: [2,4,null,null], totalActive: 10, numContinents: 2 };\nconst PUZZLE_4 = { n: 4, colClues: [3,2,null,0], rowClues: [3,1,2,null], totalActive: 8, numContinents: 2 };\nconst PUZZLE_5 = { n: 5, colClues: [null,2,null,2,1], rowClues: [2,null,1,2,1], numContinents: 1 };\nconst PUZZLE_HARD_1 = { n: 5, colClues: [null,2,2,3,1], rowClues: [3,2,1,null,1], totalActive: 9, numContinents: 2 }; // 184867\nconst PUZZLE_HARD_2 = { n: 5, colClues: [null,2,2,3,1], rowClues: [3,2,1,null,1], totalActive: 9, numContinents: 8 };\n\nconst TodaysPage = (props: DayProps) => {\n  return (\n    <Container>\n      {props.links}\n      <Typography variant=\"h3\">Day 3</Typography>\n      <p>\n        Let's continue adding more features!\n      </p>\n\n      <Typography variant=\"h5\">A note on controls</Typography>\n      <p>\n        To signify an active square, click to draw a big dot in that square. A\n        right click will mark a square with grey strokes. This counts as the\n        square still being inactive, but can be used as a note-to-self that the\n        square is definitely not active while working out the puzzle.\n      </p>\n\n      <Typography variant=\"h4\">Intro Puzzle #1</Typography>\n      <PuzzleWrapper details={PUZZLE_0} highlightErrors />\n      <br />\n\n      <Typography variant=\"h4\">Intro Puzzle #2</Typography>\n      <PuzzleWrapper details={PUZZLE_0A} highlightErrors />\n      <br />\n\n      <Typography variant=\"h4\">Intro Puzzle #3</Typography>\n      <p>I just want to clarify this.</p>\n      <PuzzleWrapper details={PUZZLE_0B} highlightErrors />\n      <br />\n\n      <Typography variant=\"h4\">Playground</Typography>\n      <p>\n        <strong>Note:</strong> This is a playground, not a regular puzzle.\n        There is no \"solution\", but the puzzle will provide you with feedback\n        on the current puzzle state.\n      </p>\n      <PuzzleWrapper\n        details={PLAYGROUND}\n        playgroundFeatures={[PlaygroundFeatures.CONTINENTS]}\n        isPlayground\n      />\n      <br />\n\n      <Typography variant=\"h4\">Intro Puzzle #4</Typography>\n      <p>\n        You can play around here to understand better what the rule is for\n        today.\n      </p>\n      <PuzzleWrapper details={PUZZLE_0C} highlightErrors />\n      <br />\n\n      <Typography variant=\"h4\">Intro Puzzle #5</Typography>\n      <p>\n        It's always worth finding some answers that are <i>wrong</i> as well as\n        correct ones. This helps you test your hypothesis.\n      </p>\n      <PuzzleWrapper details={PUZZLE_0D} highlightErrors />\n      <br />\n\n      <Typography variant=\"h4\">Intro Puzzle #6</Typography>\n      <p>\n        Follow the pattern.\n      </p>\n      <PuzzleWrapper details={PUZZLE_0E} highlightErrors />\n      <br />\n\n      <Typography variant=\"h4\">Intro Puzzle #7</Typography>\n      <p>\n        Hopefully this one should be understandable at this point.\n      </p>\n      <PuzzleWrapper details={PUZZLE_0F} highlightErrors />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #1</Typography>\n      <p>Let's do some puzzles now.</p>\n      <PuzzleWrapper details={PUZZLE_1} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #2</Typography>\n      <PuzzleWrapper details={PUZZLE_2} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #3</Typography>\n      <PuzzleWrapper details={PUZZLE_3} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #4</Typography>\n      <PuzzleWrapper details={PUZZLE_4} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #5</Typography>\n      <PuzzleWrapper details={PUZZLE_5} />\n      <br />\n\n      <Typography variant=\"h4\">Final puzzle #1</Typography>\n      <PuzzleWrapper details={PUZZLE_HARD_1} />\n      <br />\n\n      <Typography variant=\"h4\">Final puzzle #2</Typography>\n      <p>Almost identical to the puzzle above.</p>\n      <PuzzleWrapper details={PUZZLE_HARD_2} />\n      <br />\n\n      {props.links}\n    </Container>\n  )\n};\n\nexport default TodaysPage;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { dayData } from './index';\n\nexport const DayLink = (props: { index: number; children?: React.ReactNode }) => {\n  const { index, children } = props;\n  const { link, title } = dayData[index];\n\n  if (children) {\n    return <Link to={link}>{children}</Link>;\n  }\n\n  return <Link to={link}>{title}</Link>;\n}\n","import React from 'react';\n\nimport { Container, Typography } from '@material-ui/core';\nimport { PuzzleWrapper } from '../../components/puzzle/PuzzleComponent';\n\nimport type { DayProps } from './types';\nimport { EdgeClue } from '../../api/puzzle';\nimport { DayLink } from './utils';\n\nconst PUZZLE_0 = {\n  n: 5,\n  colClues: [0,0,EdgeClue.NO_TRIPLES,0,0],\n  rowClues: [null, null, null, null, null],\n  totalActive: 3,\n};\nconst PUZZLE_0A = {\n  n: 3,\n  colClues: [EdgeClue.NO_TRIPLES,EdgeClue.NO_TRIPLES,EdgeClue.NO_TRIPLES],\n  rowClues: [EdgeClue.NO_TRIPLES,EdgeClue.NO_TRIPLES,EdgeClue.NO_TRIPLES],\n  totalActive: 6,\n};const PUZZLE_1 = {\n  n: 4,\n  colClues: [EdgeClue.NO_TRIPLES,1,EdgeClue.NO_TRIPLES,EdgeClue.NO_TRIPLES],\n  rowClues: [1,3,3,EdgeClue.NO_TRIPLES],\n  totalActive: 8,\n};\nconst PUZZLE_2 = {\n  n: 4,\n  colClues: [EdgeClue.NO_TRIPLES,EdgeClue.NO_TRIPLES,2,3],\n  rowClues: [1,EdgeClue.NO_TRIPLES,EdgeClue.NO_TRIPLES,3],\n  totalActive: 10,\n};\nconst PUZZLE_3 = {\n  n: 5,\n  colClues: [EdgeClue.NO_TRIPLES,4,EdgeClue.NO_TRIPLES,EdgeClue.NO_TRIPLES,5],\n  rowClues: [5,EdgeClue.NO_TRIPLES,EdgeClue.NO_TRIPLES,3,3],\n  totalActive: 18,\n};\nconst PUZZLE_4 = {\n  n: 5,\n  colClues: [4,4,EdgeClue.NO_TRIPLES,4,EdgeClue.NO_TRIPLES],\n  rowClues: [5,4,3,5,EdgeClue.NO_TRIPLES],\n  totalActive: 20,\n};\nconst PUZZLE_HARD_1 = {\n  n: 6,\n  colClues: [6,3,5,EdgeClue.NO_TRIPLES,EdgeClue.NO_TRIPLES,EdgeClue.NO_TRIPLES],\n  rowClues: [4,EdgeClue.NO_TRIPLES,2,5,4,6],\n  numContinents: 1,\n};\n\nconst TodaysPage = (props: DayProps) => {\n  return (\n    <Container>\n      {props.links}\n      <Typography variant=\"h3\">Day 4</Typography>\n\n      <Typography variant=\"h4\">Intro Puzzle #1</Typography>\n      <PuzzleWrapper details={PUZZLE_0} highlightErrors />\n      <p>\n        Make sure to get this one wrong too, don't move on straight away.\n      </p>\n\n      <Typography variant=\"h4\">Intro Puzzle #2</Typography>\n      <p>\n        You can play around here to understand better what the rule is for\n        today.\n      </p>\n      <PuzzleWrapper details={PUZZLE_0A} highlightErrors />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #1</Typography>\n      <p>Let's do some puzzles now.</p>\n      <PuzzleWrapper details={PUZZLE_1} highlightErrors />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #2</Typography>\n      <PuzzleWrapper details={PUZZLE_2} highlightErrors />\n      <br /> \n\n      <Typography variant=\"h4\">Puzzle #3</Typography>\n      <PuzzleWrapper details={PUZZLE_3} highlightErrors />\n      <br /> \n\n      <Typography variant=\"h4\">Puzzle #4</Typography>\n      <PuzzleWrapper details={PUZZLE_4} highlightErrors />\n      <br />\n\n      <Typography variant=\"h4\">Final puzzle</Typography>\n      <p>\n        If you're not familiar with this feature in the top-left, you should\n        revisit <DayLink index={2} />\n      </p>\n      <PuzzleWrapper details={PUZZLE_HARD_1} />\n      <br />\n\n      {props.links}\n    </Container>\n  )\n};\n\nexport default TodaysPage;\n","import React from 'react';\n\nimport { Container, Typography } from '@material-ui/core';\nimport { PuzzleWrapper } from '../../components/puzzle/PuzzleComponent';\n\nimport type { DayProps } from './types';\n\nconst PUZZLE_0 = { n: 3, colClues: [null,null,null], rowClues: [null,null,null], minTotal: 7 };\nconst PUZZLE_1 = { n: 5, colClues: [null,3,null,3,4], rowClues: [null,1,null,null,2], minTotal: 17 };\nconst PUZZLE_2 = { n: 5, colClues: [4,null,4,0,3], rowClues: [3,null,2,2,null], numContinents: 2, minTotal: 6 };\nconst PUZZLE_3 = { n: 5, colClues: [null,1,null,3,null], rowClues: [2,3,1,null,null], minTotal: 8, maxTotal: 9, numContinents: 1 };\n// const PUZZLE_4 = { n: 4, colClues: [3,2,null,0], rowClues: [3,1,2,null], totalActive: 8, numContinents: 2 };\n// const PUZZLE_5 = { n: 5, colClues: [null,2,null,2,1], rowClues: [2,null,1,2,1], numContinents: 1 };\n// const PUZZLE_HARD_1 = { n: 5, colClues: [null,2,2,3,1], rowClues: [3,2,1,null,1], totalActive: 9, numContinents: 2 }; // 184867\n// const PUZZLE_HARD_2 = { n: 5, colClues: [null,2,2,3,1], rowClues: [3,2,1,null,1], totalActive: 9, numContinents: 8 };\n\nconst TodaysPage = (props: DayProps) => {\n  return (\n    <Container>\n      {props.links}\n      <Typography variant=\"h3\">Day 5</Typography>\n      <p>\n        Let's continue adding more features!\n      </p>\n\n      <Typography variant=\"h5\">A note on controls</Typography>\n      <p>\n        To signify an active square, click to draw a big dot in that square. A\n        right click will mark a square with grey strokes. This counts as the\n        square still being inactive, but can be used as a note-to-self that the\n        square is definitely not active while working out the puzzle.\n      </p>\n\n      <Typography variant=\"h4\">Intro Puzzle #1</Typography>\n      <PuzzleWrapper details={PUZZLE_0} highlightErrors />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #1</Typography>\n      <p>Let's do some puzzles now.</p>\n      <PuzzleWrapper details={PUZZLE_1} highlightErrors />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #2</Typography>\n      <PuzzleWrapper details={PUZZLE_2} highlightErrors />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #3</Typography>\n      <PuzzleWrapper details={PUZZLE_3} />\n      <br />\n\n      {/* <Typography variant=\"h4\">Puzzle #4</Typography>\n      <PuzzleWrapper details={PUZZLE_4} />\n      <br />\n\n      <Typography variant=\"h4\">Puzzle #5</Typography>\n      <PuzzleWrapper details={PUZZLE_5} />\n      <br />\n\n      <Typography variant=\"h4\">Final puzzle #1</Typography>\n      <PuzzleWrapper details={PUZZLE_HARD_1} />\n      <br />\n\n      <Typography variant=\"h4\">Final puzzle #2</Typography>\n      <p>Almost identical to the puzzle above.</p>\n      <PuzzleWrapper details={PUZZLE_HARD_2} />\n      <br /> */}\n\n      {props.links}\n    </Container>\n  )\n};\n\nexport default TodaysPage;\n","import Day1 from './day1';\nimport Day2 from './day2';\nimport Day3 from './day3';\nimport Day4 from './day4';\nimport Day5 from './day5';\n\nimport type { DayInfo } from './types';\n\nexport const dayData: DayInfo[] = [\n  {\n    title: 'Day 1: The beginning',\n    description: 'The first day',\n    link: '/days/1',\n    component: Day1,\n  },\n  {\n    title: 'Day 2: Some variation',\n    description: 'Adding a little variety/ambiguity',\n    link: '/days/2',\n    component: Day2,\n  },\n  {\n    title: 'Day 3: A fuzzy number',\n    description: 'No guidance on an island',\n    link: '/days/3',\n    component: Day3,\n  },\n  {\n    title: 'Day 4: \"Circle circle cross\"',\n    description: 'Whatever could it mean?',\n    link: '/days/4',\n    component: Day4,\n  },\n  {\n    title: 'Day 5: Time for some leeway',\n    description: 'Does this help or hinder?',\n    link: '/days/5',\n    component: Day5,\n    hidden: true,\n  },\n];\n","import React, { Fragment } from 'react';\n\nimport { Card, CardContent, Container, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport { dayData } from '../days';\n\nconst HomePage = () => {\n  return (\n    <Container>\n      <br />\n      <Typography variant=\"h3\">Grid puzzles website</Typography>\n      <p>Hopefully the home of some interesting puzzles.</p>\n      {dayData.filter(day => !day.hidden).map(day => (\n        <Fragment key={day.link}>\n          <Link to={day.link}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\">{day.title}</Typography>\n                {day.description && (<p>{day.description}</p>)}\n              </CardContent>\n            </Card>\n          </Link>\n          <br />\n        </Fragment>\n      ))}\n    </Container>\n  )\n};\n\nexport default HomePage;\n","import React, { useEffect } from 'react';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  withRouter,\n} from 'react-router-dom';\n\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\n\nimport HomePage from './pages/homepage';\nimport { dayData } from './pages/days';\n\nconst ScrollToTop = withRouter(({ history }) => {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    }\n  }, [history]);\n\n  return null;\n});\n\nconst NavItem = (props: { children: React.ReactChild, to: string }) => {\n  return (\n    <Link to={props.to} style={{ textDecoration: 'none', color: 'white', marginLeft: '32px' }}>\n      <Typography variant=\"button\">\n        {props.children}\n      </Typography>\n    </Link>\n  );\n}\n\nconst shownDays = dayData.filter(day => !day.hidden);\n\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop />\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Typography variant=\"h5\">\n            Grid Puzzle\n          </Typography>\n          <NavItem to=\"/\">Home</NavItem>\n          <NavItem to={dayData[0].link}>Day 1</NavItem>\n          <NavItem to={shownDays[shownDays.length - 1].link}>Today</NavItem>\n        </Toolbar>\n      </AppBar>\n      <Switch>\n        {dayData.map(({ component: Component, link, title }, index) => (\n          <Route key={index} path={link}>\n            <Component links={(\n              <div style={{ paddingTop: '8px', marginBottom: '32px' }}>\n                {index > 0 && (\n                  <div style={{ float: 'left' }}>\n                    <Link to={dayData[index - 1].link}>\n                    ← {dayData[index - 1].title}\n                    </Link>\n                  </div>\n                )}\n                {index < (shownDays.length - 1) && (\n                  <div style={{ float: 'right' }}>\n                    <Link to={dayData[index + 1].link}>\n                      {dayData[index + 1].title} →\n                    </Link>\n                  </div>\n                )}\n              </div>\n            )} />\n          </Route>\n        ))}\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}